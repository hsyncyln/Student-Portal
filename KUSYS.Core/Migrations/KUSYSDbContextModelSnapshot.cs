// <auto-generated />
using System;
using KUSYS.Domain.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KUSYS.Core.Migrations
{
    [DbContext(typeof(KUSYSDbContext))]
    partial class KUSYSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KUSYS.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsertUserId");

                    b.HasIndex("UpdateUserId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CSI101",
                            InsertDate = new DateTime(2022, 11, 18, 4, 12, 19, 488, DateTimeKind.Local).AddTicks(1525),
                            InsertUserId = 1,
                            IsDeleted = false,
                            Name = "Introduction to Computer Science",
                            UpdateUserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "CSI102",
                            InsertDate = new DateTime(2022, 11, 18, 4, 12, 19, 488, DateTimeKind.Local).AddTicks(1535),
                            InsertUserId = 1,
                            IsDeleted = false,
                            Name = "Algorithms",
                            UpdateUserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "MAT101",
                            InsertDate = new DateTime(2022, 11, 18, 4, 12, 19, 488, DateTimeKind.Local).AddTicks(1537),
                            InsertUserId = 1,
                            IsDeleted = false,
                            Name = "Calculus",
                            UpdateUserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "PHY101",
                            InsertDate = new DateTime(2022, 11, 18, 4, 12, 19, 488, DateTimeKind.Local).AddTicks(1539),
                            InsertUserId = 1,
                            IsDeleted = false,
                            Name = "Physics",
                            UpdateUserId = 1
                        });
                });

            modelBuilder.Entity("KUSYS.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsertUserId");

                    b.HasIndex("UpdateUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2000, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ali",
                            InsertDate = new DateTime(2022, 11, 18, 4, 12, 19, 488, DateTimeKind.Local).AddTicks(1445),
                            InsertUserId = 1,
                            IsDeleted = false,
                            LastName = "Korkmaz",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2001, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Selin",
                            InsertDate = new DateTime(2022, 11, 18, 4, 12, 19, 488, DateTimeKind.Local).AddTicks(1474),
                            InsertUserId = 1,
                            IsDeleted = false,
                            LastName = "Kara",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1999, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kerem",
                            InsertDate = new DateTime(2022, 11, 18, 4, 12, 19, 488, DateTimeKind.Local).AddTicks(1478),
                            InsertUserId = 1,
                            IsDeleted = false,
                            LastName = "Yıldız",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("KUSYS.Domain.Entities.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 4,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 2,
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("KUSYS.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "admin",
                            UserTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserName = "student1",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserName = "student2",
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            UserName = "student3",
                            UserTypeId = 2
                        });
                });

            modelBuilder.Entity("KUSYS.Domain.Entities.Course", b =>
                {
                    b.HasOne("KUSYS.Domain.Entities.User", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KUSYS.Domain.Entities.User", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("KUSYS.Domain.Entities.Student", b =>
                {
                    b.HasOne("KUSYS.Domain.Entities.User", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KUSYS.Domain.Entities.User", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KUSYS.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KUSYS.Domain.Entities.StudentCourse", b =>
                {
                    b.HasOne("KUSYS.Domain.Entities.Course", "Course")
                        .WithMany("CourseStudents")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KUSYS.Domain.Entities.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KUSYS.Domain.Entities.Course", b =>
                {
                    b.Navigation("CourseStudents");
                });

            modelBuilder.Entity("KUSYS.Domain.Entities.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
